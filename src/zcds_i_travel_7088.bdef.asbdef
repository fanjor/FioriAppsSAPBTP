managed; // implementation in class zbp_cds_i_travel_7088 unique;
//strict ( 1 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for ZCDS_I_TRAVEL_7088 alias Travel
implementation in class zbp_i_travel_7088 unique
persistent table ZTB_TRAVEL_7088
lock master
authorization master ( instance )
etag master LastChangedAt
{
  //readonly fields
  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy;

  //mandatory fields
  field ( mandatory ) AgencyId, OverallStatus, BookingFee, CurrencyCode;

  //dynamic field control
  field ( features : instance ) TravelId;

  create;
  update;
  delete;

  //validations
  validation validateCustomer on save { field CustomerId; }
  validation validateDates on save { field BeginDate, EndDate; }
  validation validateStatus on save { field OverallStatus; }

  //actions
  action ( features : instance ) acceptTravel result[1] $self;
  action ( features : instance ) rejectTravel result[1] $self;
  static action createTravelByTemplate result[1] $self;

  association _Booking { create; }

  //mapping
  mapping for ZTB_TRAVEL_7088
  { TravelID      = travel_id;
    AgencyID      = agency_id;
    CustomerID    = customer_id;
    BeginDate     = begin_date;
    EndDate       = end_date;
    BookingFee    = booking_fee;
    TotalPrice    = total_price;
    CurrencyCode  = currency_code;
    Description   = description;
    OverallStatus = overall_status;
    CreatedBy     = created_by;
    CreatedAt     = created_at;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
  }
}


define behavior for ZCDS_I_BOOKING_7088 alias Booking
implementation in class zbp_i_booking_7088 unique
persistent table ZTB_BOOKING_7088
lock dependent by _Travel
//lock dependent by ( travel_id = TravelId )
authorization dependent by _Travel
etag master LastChangedAt
{
  //readonly fields
  field ( readonly ) TravelId;

  //mandatory fields
  field( mandatory ) CarrierId, ConnectionId, FlightDate, BookingStatus;

  update;
  delete;

  //validations
  validation validateStatus on save { field BookingStatus; }

  //determinations
  determination calculateTotalFlightPrice on modify { field FlightPrice; }
  determination calculateTotalSupplimPrice on modify { field CurrencyCode; }

  association _Travel;
  association _BookingSupplement { create; }

  //mapping
  mapping for ZTB_BOOKING_7088
  { TravelId      = travel_id;
    BookingId     = booking_id;
    BookingDate   = booking_date;
    CustomerId    = customer_id;
    CarrierId     = carrier_id;
    ConnectionId  = connection_id;
    FlightDate    = flight_date;
    FlightPrice   = flight_price;
    CurrencyCode  = currency_code;
    BookingStatus = booking_status;
    LastChangedAt = last_changed_at;
  }
}


define behavior for ZCDS_I_BOOKSUP_7088 alias Supplement
implementation in class zbp_i_booksup_7088 unique
with unmanaged save
//persistent table <???>
lock dependent by _Travel
//lock dependent by ( TravelId = TravelId )
authorization dependent by _Travel
etag master LastChangedAt
{
  //readonly fields
  field ( readonly ) TravelId, BookingId;

  //mandatory fields
  field( mandatory ) SupplementId, Price;

  update;
  delete;

  //determinations
  determination calculateTotalSupplimPrice on modify { field Price, CurrencyCode; }

  association _Travel;
  association _Booking;

  //mapping
  mapping for ztb_log_7088
  { TravelId            = travel_id;
    //BookingId           = xx;
    //BookingSupplementId = xx;
    //SupplementId        = xx;
    //Price               = xx;
    //CurrencyCode        = xx;
    LastChangedAt       = created_at;
  }
}